[
  {
    "title": "instalacion",
    "contenido":  "<div>\n    <h1>Instalación</h1>\n    <h3>Nota de compatibilidad</h3>\n    <p>Vue <strong>no</strong> es compatible con IE8 y versiones anteriores, ya que utiliza las\n        características de ECMAScript 5 que son incompatibles en IE8. Sin embargo, admite todos los\n        navegadores compatibles con ECMAScript 5.\n    </p>\n    <h3>Notas de lanzamiento</h3>\n    <p>Última versión estable: 2.5.16</p>\n    <p>Las notas de lanzamiento detalladas para cada versión están disponibles en GitHub.</p>\n    <h2>Vue Devtools</h2>\n    <p>Cuando use Vue, le recomendamos que también instale Vue Devtools en su navegador, lo que le\n        permite inspeccionar y depurar sus aplicaciones de Vue de una manera más amigable.\n    </p>\n    <h2>Inclusión Directa con <code>&lt;script&gt;</code></h2>\n    <p>Simplemente descargue e incluya la etiqueta <em>script</em> con la ruta correcta.\n        <code>Vue</code> será registrado como una variable global.\n    </p>\n    <p>No utilice la versión minificada (de producción) durante el desarrollo. Usted perderá todas\n        las advertencias interesantes para los errores más comunes!\n    </p>\n    <div>Versión de\n        Desarrollo<span>Mensajes de error completos y modo de depuración</span><br><br>Versión\n        de Producción<span>Sin mensajes de error, 30.90KB min+gzip</span>\n    </div>\n    <h3>CDN</h3>\n    <p>Es recomendable vincular a un número específico de versión que pueda actualizar\n        manualmente:\n    </p>\n    <pre><span><span>&lt;<span>script</span> <span>src</span>=<span>\"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js\"</span>&gt;</span><span></span><span>&lt;/<span>script</span>&gt;</span></span><br></pre>\n    <p>Puede examinar el código fuente del paquete NPM en cdn.jsdelivr.net/npm/vue.</p>\n    <p>Vue también está disponible en unpkg y cdnjs (cdnjs tarda un poco en\n        sincronizarse, por lo que es posible\n        que la última versión aún no esté disponible).\n    </p>\n    <p>Asegúrese de leer acerca de las diferentes\n        compilaciones de Vue y use la <strong>versión de producción</strong> en su sitio\n        publicado, reemplazando <code>vue.js</code> con <code>vue.min.js</code>. Esta es una versión\n        más pequeña optimizada para la velocidad en lugar de la experiencia de desarrollo.\n    </p>\n    <h2>NPM</h2>\n    <p>NPM es el método de instalación recomendado para construir aplicaciones a gran escala con\n        Vue. Este combina perfectamente con empaquetadores de módulos, tales como Webpack o\n        Browserify. Vue\n        también ofrece herramientas para la creación de componentes de un solo archivo (en inglés\n        Single-File Components).\n    </p>\n    <pre><span class=\"line\"><span class=\"comment\"># latest stable</span></span><br><span class=\"line\">$ npm install vue</span><br></pre>\n    <h2>CLI</h2>\n    <p>Vue proporciona un CLI\n        oficial para rapidamente construir ambiciosas <em>Single Page Applications</em>.\n        Proporciona configuraciones de <em>build</em> prontas para un proceso de trabajo de <em>front-end</em>\n        moderno. Sólo tarda unos minutos para estar listo y ejecutándose con <em>hot-reload</em>,\n        <em>lint</em> al guardar cambios y empaquetado listo para la distribución en producción.\n        Consulte los documentos de\n        Vue CLI para obtener más detalles.\n    </p>\n    <p>Este tema presupone conocimiento previo en Node.js y herramientas de\n        <em>build</em> asociadas. Si usted es nuevo en Vue o en este tipo de herramienta, le\n        recomendamos encarecidamente que pase por toda la guía antes de intentar\n        utilizar el CLI.\n    </p>\n    <h2>Explicación de las\n        Diferentes Compilaciones\n    </h2>\n    <p>En el directorio\n        <code>dist/</code> del paquete NPM usted encontrará muchas compilaciones o\n        distribuciones diferentes de Vue.js. Una descripción de la diferencia entre ellas:\n    </p>\n    <table>\n        <thead>\n        <tr>\n            <th></th>\n            <th>UMD</th>\n            <th>CommonJS</th>\n            <th>ES Module</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n            <td><strong>Completa</strong></td>\n            <td>vue.js</td>\n            <td>vue.common.js</td>\n            <td>vue.esm.js</td>\n        </tr>\n        <tr>\n            <td><strong>Runtime</strong></td>\n            <td>vue.runtime.js</td>\n            <td>vue.runtime.common.js</td>\n            <td>vue.runtime.esm.js</td>\n        </tr>\n        <tr>\n            <td><strong>Completa (producción)</strong></td>\n            <td>vue.min.js</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        <tr>\n            <td><strong>Runtime (producción)</strong></td>\n            <td>vue.runtime.min.js</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        </tbody>\n    </table>\n    <h3>Términos\n    </h3>\n    <ul>\n        <li>\n            <p><strong>Completa</strong>: compilaciones que contienen tanto el compilador como el\n                motor de tiempo de ejecución (en inglés, <em>runtime</em>).\n            </p>\n        </li>\n        <li>\n            <p><strong>Compilador</strong>: código que es responsable de compilar <em>template\n                strings</em> en las funciones de <em>render</em> de JavaScript.\n            </p>\n        </li>\n        <li>\n            <p><strong>Runtime</strong>: código que es responsable de crear instancias de Vue,\n                renderizado y actualización del DOM virtual, etc. Básicamente todo menos el compilador.\n            </p>\n        </li>\n        <li>\n            <p><strong>UMD</strong>:\n                las compilaciones UMD se pueden utilizar directamente en el navegador a través de un tag\n                <code>&lt;script&gt;</code>. El archivo predeterminado de jsDelivr CDN en\n                https://cdn.jsdelivr.net/npm/vue\n                es la distribución Compilador + Runtime en formato UMD (<code>vue.js</code>).\n            </p>\n        </li>\n        <li>\n            <p><strong>CommonJS</strong>: formato destinado a empaquetadores\n                antiguos como browserify or webpack\n                1. El archivo predeterminado para estos empaquetadores (<code>pkg.main</code>)\n                es la distribución Runtime en formato CommonJS (<code>vue.runtime.common.js</code>).\n            </p>\n        </li>\n        <li>\n            <p><strong>ES Module</strong>: formato de módulos ECMAScript\n                destinado a empaquetadores modernos como webpack 2\n                o rollup. El archivo\n                predeterminado para estos empaquetadores (<code>pkg.module</code>) es la distribución\n                Runtime en formato ES Module (<code>vue.runtime.esm.js</code>).\n            </p>\n        </li>\n    </ul>\n    <h3>Runtime + Compilador vs. Runtime</h3>\n    <p>Si necesita compilar <em>templates</em> en tiempo real en el cliente (por ejemplo: pasando un\n        <em>String</em> en la opción <code>template</code>, o usando elementos preexistentes en el\n        DOM a través del HTML como <em>template</em>), necesitará el compilador y por lo tanto la\n        distribución completa:\n    </p>\n<pre>\n    <span class=\"line\"><span class=\"comment\">// esto requiere el compilador</span></span><br />\n    <span class=\"line\"><span class=\"keyword\">new</span> Vue({</span><br />\n    <span class=\"line\"> template: <span class=\"string\">'&lt;div&gt;{{ hi }}&lt;/div&gt;'</span></span><br />\n    <span class=\"line\">})</span><br />\n    <span class=\"line\"></span><br />\n    <span class=\"line\"><span class=\"comment\">// esto no</span></span><br />\n    <span class=\"line\"><span class=\"keyword\">new</span> Vue({</span><br />\n    <span class=\"line\"> render (h) {</span><br />\n    <span class=\"line\"> <span class=\"keyword\">return</span> h(<span class=\"string\">'div'</span>, <span class=\"keyword\">this</span>.hi)</span><br />\n    <span class=\"line\"> }</span><br />\n    <span class=\"line\">})</span><br />\n</pre>\n\n    <p>Cuando se usa <code>vue-loader</code> o <code>vueify</code>, los <em>templates</em> dentro de\n        los archivos <code>*.vue</code> se compilan previamente en JavaScript en el momento de la\n        compilación. Realmente no necesita el compilador en el paquete final y, por lo tanto, puede\n        usar la distribución Runtime.\n    </p>\n    <p>Dado que las distribuciones solo con el código de Runtime son aproximadamente un 30% más\n        ligeras que las distribuciones completas, debe usarlas siempre que pueda. Si aún desea\n        utilizar la distribución completa, debe configurar un alias en su empaquetador:\n    </p>\n    <h4>Webpack</h4>\n<pre><code class=\"hljs js\"><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-comment\">// ...</span>\n  <span class=\"hljs-attr\">resolve</span>: {\n    <span class=\"hljs-attr\">alias</span>: {\n      <span class=\"hljs-string\">'vue$'</span>: <span class=\"hljs-string\">'vue/dist/vue.esm.js'</span> <span class=\"hljs-comment\">// 'vue/dist/vue.common.js' for webpack 1</span>\n    }\n  }\n}</code></pre>\n    <h4>Rollup</h4>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> alias = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'rollup-plugin-alias'</span>)\n\nrollup({\n  <span class=\"hljs-comment\">// ...</span>\n  <span class=\"hljs-attr\">plugins</span>: [\n    alias({\n      <span class=\"hljs-string\">'vue'</span>: <span class=\"hljs-built_in\">require</span>.resolve(<span class=\"hljs-string\">'vue/dist/vue.esm.js'</span>)\n    })\n  ]\n})</code></pre>\n    <h4>Browserify</h4>\n<pre><code class=\"hljs js\">{\n  <span class=\"hljs-comment\">// ...</span>\n  <span class=\"hljs-string\">\"browser\"</span>: {\n    <span class=\"hljs-string\">\"vue\"</span>: <span class=\"hljs-string\">\"vue/dist/vue.common.js\"</span>\n  }\n}</code></pre>\n    <p>Agregue a su proyecto <code>package.json</code>:</p>\n    <h4>Parcel</h4>\n<pre><code class=\"hljs js\">{\n  <span class=\"hljs-comment\">// ...</span>\n  <span class=\"hljs-string\">\"alias\"</span>: {\n    <span class=\"hljs-string\">\"vue\"</span> : <span class=\"hljs-string\">\"./node_modules/vue/dist/vue.common.js\"</span>\n  }\n}</code></pre>\n    <p>Agregue a su proyecto <code>package.json</code>:</p>\n    <h3>Desarrollo\n        vs. Producción\n    </h3>\n    <p>Los modos de desarrollo/producción están codificados para las compilaciones de UMD: los\n        archivos no minimizados son para desarrollo y los archivos minificados para producción.\n    </p>\n    <p>Las distribuciones de módulos de CommonJS y ES están destinadas a empaquetadores, por lo\n        tanto, no proporcionamos versiones mínimas para ellos. Usted será responsable de minimizar\n        el paquete final usted mismo.\n    </p>\n    <p>Estas distribuciones también preservan chequeos a la variable\n        <code>process.env.NODE_ENV</code> para determinar el modo en que deben ejecutarse. Debe\n        configurar apropiadamente su empaquetador para cambiar estas variables de entorno\n        correctamente para controlar el modo en que Vue se ejecutará. Cambiar <code>process.env.NODE_ENV</code>\n        usando <em>Strings</em> literales también permite que minificadores como UglifyJS eliminen\n        completamente los bloques de código de desarrollo, reduciendo el tamaño del archivo final.\n    </p>\n    <h3>Ambientes CSP</h3>\n    <p>Algunos entornos, como Google Chrome Apps, aplican la Política de seguridad de contenido\n        (CSP), que prohíbe el uso de <code>new Function()</code> para evaluar expresiones. La\n        distribución completa depende de esta característica para compilar <em>templates</em>, por\n        lo que no se puede utilizar en estos entornos.\n    </p>\n    <p>Por otro lado, la distribución Runtime es totalmente compatible con CSP. Cuando se utiliza la\n        distribución Runtime con Webpack + vue-loader o Browserify + vueify, sus <em>templates</em>\n        serán precompilados\n        en funciones <code>render</code> que funcionan perfectamente en entornos CSP.\n    </p>\n    <h2>Compilación\n        de Desarrollo\n    </h2>\n    <p><strong>Importante</strong>: los archivos compilados en la carpeta <code>/dist</code> de\n        GitHub solo se crean durante los lanzamientos de nuevas versiones. Para usar Vue desde el\n        último código fuente de GitHub, ¡tendrás que crearlo tú mismo!\n    </p>\n<pre>\n    <span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/vuejs/vue.git node_modules/vue</span><br />\n    <span class=\"line\"><span class=\"built_in\">cd</span> node_modules/vue</span><br />\n    <span class=\"line\">npm install</span><br />\n    <span class=\"line\">npm run build</span><br />\n</pre>\n    <h2>Bower</h2>\n    <p>Solo las compilaciones UMD están disponibles en Bower.</p>\n    <h2>Cargadores\n        de Módulos AMD\n    </h2>\n    <p>Todas las compilaciones UMD se pueden utilizar directamente como un módulo AMD.</p>\n</div>"
  },
  {
    "title": "Introducción",
    "contenido":  "introduccion"
  },
  {
    "title": "La instancia Vue",
    "contenido":  ""
  },
  {
    "title": "Sintaxis de Template",
    "contenido":  ""
  },
  {
    "title": "Propiedades Computadas y Observadores",
    "contenido":  ""
  },
  {
    "title": "Enlace Clases y Estilos",
    "contenido":  ""
  },
  {
    "title": "Renderización Condicional",
    "contenido":  ""
  },
  {
    "title": "Renderizado de lista",
    "contenido":  ""
  },
  {
    "title": "Manejo de eventos",
    "contenido":  ""
  },
  {
    "title": "Binding en Formularios",
    "contenido":  ""
  },
  {
    "title": "Conceptos Básicos de Componentes",
    "contenido":  ""
  }
]